version: "3.2"


volumes:
    pgmaster:
    pgslave1:

networks:
  webnet:
  pg-cluster:

services:

# 分布式数据库集群
  pgmaster:
    image: paunin/postdock-pgsql
    environment:
      PARTNER_NODES: "pgmaster,pgslave1"
      NODE_ID: 1 # Integer number of node
      NODE_NAME: node1 # Node name
      CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)
      NODE_PRIORITY: 100  # (default: 100)
      SSH_ENABLE: 1
      #database we want to use for application
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: test
      CLEAN_OVER_REWIND: 0
      CONFIGS: "listen_addresses:'*',max_replication_slots:5"
      CLUSTER_NAME: pg_cluster # default is pg_cluster
      REPLICATION_DB: replication_db # default is replication_db
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass
    ports:
      - 5432:5432
    volumes:
      - pgmaster:/var/lib/postgresql/data
    networks:
      pg-cluster:
        aliases:
          - pgmaster

  pgslave1:
      image: paunin/postdock-pgsql

      environment:
          PARTNER_NODES: "pgmaster,pgslave1"
          REPLICATION_PRIMARY_HOST: pgmaster
          NODE_ID: 2
          NODE_NAME: node2
          CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
          CLEAN_OVER_REWIND: 1
          CONFIGS: "max_replication_slots:10" #some overrides
      ports:
          - 5441:5432
      volumes:
          - pgslave1:/var/lib/postgresql/data
      networks:
          pg-cluster:
              aliases:
                  - pgslave1

  pgpool:
      image: paunin/postdock-pgpool

      environment:
        PCP_USER: pcp_user
        PCP_PASSWORD: pcp_pass
        WAIT_BACKEND_TIMEOUT: 60

        CHECK_USER: postgres
        CHECK_PASSWORD: root
        CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
        SSH_ENABLE: 1
        DB_USERS: postgres:root # in format user:password[,user:password[...]]
        BACKENDS: "1:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,2:pgslave1::::"

        REQUIRE_MIN_BACKENDS: 1 # minimal number of backends to start pgpool (some might be unreachable)
        CONFIGS: "num_init_children:250,max_pool:4"

      ports:
        - 5430:5432
        - 9898:9898 # PCP

      networks:
        pg-cluster:
          aliases:
            - pgpool


# 应用部署
  app:
    image: golang
    command: ping pgmaster
    networks:
      - webnet
      - pg-cluster

  nsqlookupdAnchor:
    image: nsqio/nsq
    ports:
      - 4160:4160
      - 4161:4161
    command: /nsqlookupd
    networks:
      webnet:
        aliases:
          - loopkup

  nsqd:
    image: nsqio/nsq
    ports:
      - 4150:4150
      - 4151:4151
    depends_on:
      - nsqlookupdAnchor
    command: /nsqd --broadcast-address=loopkup --lookupd-tcp-address=loopkup:4160
    networks:
      - webnet

  nsqadmin:
    image: nsqio/nsq
    command: /nsqadmin --lookupd-http-address=loopkup:4161
    depends_on:
      - nsqlookupdAnchor
    ports:
      - 4171:4171
    networks:
      - webnet

  # 监控
  visualizer:
    image: dockersamples/visualizer
    ports:
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  influxsrv:
    image: tutum/influxdb:0.8.8
    ports:
      - "8083:8083"
      - "8086:8086"
    environment:
      - PRE_CREATE_DB=cadvisor

    networks:
      webnet:
        aliases:
          - influxsrv

  cadvisor:
    image: google/cadvisor
    depends_on:
      - influxsrv
    command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxsrv:8086
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

    networks:
      webnet:
        aliases:
          - cadvisor

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - INFLUXDB_HOST=localhost
      - INFLUXDB_PORT=8086
      - INFLUXDB_NAME=cadvisor
      - INFLUXDB_USER=root
      - INFLUXDB_PASS=root
    depends_on:
      - influxsrv
    networks:
      webnet:
        aliases:
          - grafana